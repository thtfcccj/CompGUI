/*******************************************************************************

                      彩屏指定区域指示模块
用于彩屏指定区域显示字符提示， 含长期驻留及短期提示功能
可选支持多@解析指定参数,如“@s后关机”,@替换为参数扣显示为“10s后关机”
仅支持单线程调用
********************************************************************************/
#ifndef _UI_TIPS_H
#define _UI_TIPS_H

/*******************************************************************************
                             参数提示功能说明
********************************************************************************/

//支持参数提示功能时定义，同时指定字符缓冲区大小,开启时，默认支持最多3个参数
#define SUPPORT_UI_TIPS_AT   64

/*******************************************************************************
                                  相关结构
********************************************************************************/
#include "Color.h"
//----------------------------------描述结构------------------------------------
struct _UiTipsDesc{
  unsigned short x;   //x轴位置
  unsigned short y;   //y轴位置
  unsigned char  w;   //最大允许字符宽度
  unsigned char Sov;  //短提示时间
  Color_t cBg;         //背景色
  Color_t cFg[4];      //4种前景色，未指定时为:0短1长  
};

//----------------------------------主结构--------------------------------------
struct _UiTips{
  const char *pStr[2];      //提示字符, 0短1长
  unsigned char TimerS;     //短期定时器，0表示结束
  unsigned char TimerL;     //长期定时器, 0xff表示长期
  
  //支持参数提示功能时,字符缓冲区定义
  #ifdef SUPPORT_UI_TIPS_AT
    unsigned char CurStr;       //当前字符
    unsigned char ReplaceCount; //当前被替换计数,0xff表示已替换为@
    char Para[12];//替换中使用的临时缓冲
    char ParaBuf[2][SUPPORT_UI_TIPS_AT]; 
  #endif
};

extern struct _UiTips UiTips; //直接静态定义
/******************************************************************************
                           相关函数
*******************************************************************************/

//-----------------------------初始化函数----------------------------------
void UiTips_Init(void);

//------------------------------任务函数-----------------------------------
//任务函数,128s调用一次
void UiTips_Task(void);

//------------------------------长期提示相关-------------------------------
//更新长期提示
void UiTips_UpdateL(const char *pStr,unsigned char TimeOv);//定时时间0xff驻留
//是否有长期任务
#define UiTips_HaveL()  (UiTips.TimerL)
//取消长期任务
#define UiTips_CancelL()  do{UiTips.TimerL = 1;}while(0)

//------------------------------短期提示相关-------------------------------
//更新短期提示
void UiTips_UpdateS(const char *pStr); 
//是否有短期任务
#define UiTips_HaveS()  (UiTips.TimerS)
//取消短期任务
#define UiTips_CancelS()  do{UiTips.TimerS = 1; }while(0)

//--------------------------------替换@为参数函数-------------------------------
//如：单参数："等待@秒后将自动重启", @将被替换为指定参数
//多参数 ："正在等待@1应答，@2秒后应答超时", @后参数最多可跟1~9个
#ifdef SUPPORT_UI_TIPS_AT 
  //Info定义为：7b：para为带符号数显示+-号，6~3b：替换长度,低3bit:小数点位置
  void UiTips_ReplaceAtPara(unsigned char Info, //7b
                            unsigned long  para);  //需替换的参数
#endif
  
//--------------------------------替换@为字符函数-------------------------------
//如：单参数："@用户已登录", @将被替换为“管理员用户已登录”
#ifdef SUPPORT_UI_TIPS_AT 
  void UiTips_ReplaceAtStr(const char *pStr);
#endif

/******************************************************************************
                           回调函数
*******************************************************************************/

//---------------------------得到描述指针--------------------------------
const struct _UiTipsDesc *UiTips_cbGetDesc(void);

//------------------------------是否被复用-------------------------------
signed char UiTips_cbIsUsed(void);

//------------------------------使用通报---------------------------------
void UiTips_cbUsedNotify(void);

//------------------------------未使用通报-------------------------------
void UiTips_cbUnUsedNotify(void);


#endif //#define _UI_TIPS_H




