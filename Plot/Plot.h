/*******************************************************************************
                         绘图库标准接口-使用调色板机制
此接口依赖于TftDrv提供的帧缓冲, 坐标零点：左上角
********************************************************************************/
#ifndef _PLOT_H
#define _PLOT_H

#include "Color.h"
#include "DefStdType.h" //标准定义简写

/*******************************************************************************
                             相关说明
********************************************************************************/

//此模块通过调板板配置前景背景等，调用相关函数前确定调色板正确。

//接口函数及说明简写说明:
//x,y,w,h: 坐标x,y, 宽度，长度
//BMP0:    指位图格式，每个bit代表一个像素，这里为横向取模

//注：所有函数均未检查显示缓冲超限！！！！！！！！！！！ 

/*******************************************************************************
                             相关结构
********************************************************************************/

//定义调色板
struct _PlotPalette{
  //画笔(即前景色)定义
  Color_t penColor;      //画笔颜色
  u8  penStyle;         //画笔样式(文本+画线均有效)，见定义
  //画刷(即背景色)定义:
  Color_t brushColor;  //画刷颜色，即背景色
  u8 brushStyle;       //画刷样式，（文本不支持）见定义
};

//画刷样式定义为:
#define PLOT_BRUSH_STYLE_NULL     0  //无画刷,即不需要背景填充,可获得透明效果(依赖硬件支持)
#define PLOT_BRUSH_STYLE_FULL     1  //以全部背景色填充
//#define PLOT_BRUSH_STYLE_DOT    2  //以点状背景色填充

//画笔样式定义为:
#define PLOT_PEN_STYLE_LINE           0  //线状
//#define PLOT_PEN_STYLE_DOT          1  //点状线
//#define PLOT_PEN_STYLE_BREAK        2  //间断线
//#define PLOT_PEN_STYLE_DOT_BREAK    3  //中心线

extern struct _PlotPalette PlotPalette; //仅支持单线程调用

/*******************************************************************************
                             调色板相关
*******************************************************************************/

//---------------------------------配置调色板---------------------------------
//penStyle置0
void Plot_CfgPalette(Color_t penColor, Color_t brushColor, u8 brushStyle);

//-----------------------------------画笔颜色操作------------------------------
#define  Plot_GetPenColor() (PlotPalette.penColor)
#define  Plot_SetPenColor(pencolor) do{PlotPalette.penColor = pencolor; }while(0)

//---------------------------------画笔颜色档式------------------------------
#define  Plot_GetPenStyle() (PlotPalette.penStyle)
#define  Plot_SetPenStyle(penstyle) do{PlotPalette.penStyle = penstyle; }while(0)

//-----------------------------------画刷颜色操作------------------------------
#define  Plot_GetBrushColor() (PlotPalette.brushColor)
#define  Plot_SetBrushColor(brushcolor) do{PlotPalette.brushColor = brushcolor;}while(0)

//---------------------------------画刷颜色档式------------------------------
#define  Plot_GetBrushStyle() (PlotPalette.brushStyle)
#define  Plot_SetBrushStyle(brushstyle) do{PlotPalette.brushStyle = brushstyle;}while(0)

/*******************************************************************************
                             字填充相关
*******************************************************************************/
//---------------------------绘制单个GB2312汉字字符-----------------------------
//横向取模16*16点位
void Plot_GB2312(u16 x, u16 y, u16 code);

//----------------------绘制单个GB2312汉字字符->双倍大小------------------------
//横向取模32*32点位
void Plot_GB2312_Scale2(u16 x,u16 y,u16 code);

//--------------------------绘制单个Asc字符-----------------------------------
//横向取模8*16点位
void Plot_Asc(u16 x,u16 y,u8 code);

//----------------------绘制单个Asc字符->8*8点阵-------------------------------
//横向取模8*8点位
void Plot_Asc8(u16 x,u16 y,u8 code);

//----------------------绘制单个Asc字符->双倍大小------------------------
//横向取模16*32点位
void Plot_Asc_Scale2(u16 x,u16 y,u8 code);

//------------------------绘制字符串->支持GB2312--------------------------
void Plot_String(u16 x,u16 y,cc8* ptr,u8 length);//长度为0时为用strlen代替

//---------------------------绘制asc8*8字符串------------------------------
void Plot_StrAsc8(u16 x,u16 y,cc8* ptr,u8 length);//长度为0时为用strlen代替

//----------------------绘制字符串->->双倍大小，支持GB2312-----------------------
void Plot_String_Scale2(u16 x,u16 y, cc8* ptr,u8 length);//长度为0时为用strlen代替

/*******************************************************************************
                              标准图形库
********************************************************************************/

//--------------------------------清显示屏为指定颜色----------------------------
void Plot_Clear(void);

//----------------------------绘制单像素水平直线---------------------------------
void Plot_LineH(u16 x,u16 y,u16 length);

//----------------------------绘制单像素垂直直线---------------------------------
void Plot_LineV(u16 x,u16 y,u16 high);

//----------------------------绘制单像素直线---------------------------------
void Plot_Line(u16 x,u16 y,u16 length, 
               u8 direction); //0:横向，非0:纵向

//----------------------------填充矩形框-------------------------------------
//画刷颜色，即背景色
void Plot_FullRect(u16 x,u16 y,u16 w,u16 h);

//-----------------------------画矩形----------------------------------------
void Plot_Rect(u16 x,u16 y,u16 w,u16 h);

//-----------------------------画索引位图-------------------------------------
//横向取模w*h点位,此函数不依赖调色板
void Plot_IndexBmp(u16 x,u16 y,u16 w,u16 h,
                   uc8 *data,      //数据矩阵,高位在前
                   u8 mapSize,     //调色板大小
                   Color_t *map);  //调色板查找表,查找表结果为0时表示透明

//-----------------------------画单色位图-------------------------------------
//横向取模w*h点位,此函数不依赖外部调色板
//para为位定义：0x01:透明 0x02 反色显示
void Plot_Bmp1(u16 x,u16 y,u16 w,u16 h, uc8 *data, u8 para);

//-----------------------------画单色透明位图----------------------------------
//横向取模w*h点位,此函数不依赖外部调色板
void Plot_Bmp1Alpha(u16 x,u16 y,u16 w,u16 h, uc8 *data);

//--------------------将对应区域的前景色替换为指定色----------------------------
//此函数只支持内置显存
void Plot_ReplacePenColor(u16 x,u16 y,u16 w,u16 h, Color_t newColor);

#endif //_PLOT_H


