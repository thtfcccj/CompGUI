/***************************************************************************
                       数码管显示驱动程序
此模块负责扫描驱动数码管的显示
此模块独立于硬件
缓冲区接口统一定义为：1亮,0灭 
***************************************************************************/

#ifndef __LED_DRV_H
#define __LED_DRV_H

/***************************************************************************
                              相关配置
***************************************************************************/

//定义LED个数, <= 7
#define LED_DRV_LED_COUNT               7  //为与DAP3141等主板老程序兼容定义为7

/***************************************************************************
                              相关结构
***************************************************************************/
struct _LedDrv{
  unsigned char ScanPos;     //扫描位置
  unsigned char ScanIndex;   //扫描计数器
  unsigned char Buf[LED_DRV_LED_COUNT];       //数码管显示缓冲区,与硬件排列相同
  //控制字,掩码方式对应每一位数码管
  unsigned char DispEn;      //显示开启位,未开启时,将不扫描该位数码管
  unsigned char LowEn;      //节能模式开启位,开启后亮度由Lower控制
  unsigned char LowHalf;     //1/2节能模式标志,否则为1/4节能状态(与原兼容)
};

//LowHalf最高位定义为(仅供外部使用)
#define LED_DRV_DIS_LOW_SWITCH    0x80    //禁止LowHalf的最高位用作节能模式总选择
//LowEn最高位定义为(仅供外部使用)
#define LED_DRV_LOW_HALF_ALL   0x80    //全部置为1/2节能模式标志,否则为1/4节能状态


extern struct _LedDrv  LedDrv;

/***************************************************************************
                              相关函数
***************************************************************************/

//-----------------------------初始化函数-----------------------------
void LedDrv_Init(void);

//-------------------------------任务函数-----------------------------
//放入进程或中断中扫描,扫描率决定显示情况
void LedDrv_Task(void);

/***************************************************************************
                    资源需求回调函数或所需定义声明
***************************************************************************/


//----------------------------配置IO函数-----------------------------
//初始化为IO全部输出,默认不显示状态
#include "IOCtrl.h"
#define LedDrv_cbCfgIo()  do{CfgLed();}while(0)

//-----------------------------写段码--------------------------
//void LedDrv_cbSetSeg(unsigned char Disp);
#include "IOCtrl.h"
#define LedDrv_cbSetSeg(disp) do{SetSEG(disp);}while(0)

//-----------------------------写Com口--------------------------
//即将该Com置为显示
void LedDrv_cbSetComm(unsigned char Ch);

//-----------------------------清Com口--------------------------
//即将该Com置为消隐
void LedDrv_cbClrComm(unsigned char Ch);

//----------------------------进入临界区--------------------------
//中断里调用LedDrv_Task时实现为空,否则需实现
//void LedDrv_cbEnterCritical(void);
#define LedDrv_cbEnterCritical() do{_CLI();}while(0)

//----------------------------退出临界区--------------------------
//中断里调用LedDrv_Task时实现为空,否则需实现
//void LedDrv_cbExitCritical(void);
#define LedDrv_cbExitCritical() do{_SEI();}while(0)

//-----------------------------清Com口--------------------------
//即将该Com置为消隐
void LedDrv_cbClrComm(unsigned char Ch);

/***************************************************************************
                           回调函数
***************************************************************************/

//--------------------------是否在测试状态-----------------------------
//测试状态指示灯全亮
#include "Test.h"
#define LedDrv_cbIsTest()    Test_IsDoing()

//--------------------------一周期扫描完成通报-------------------------
//返回0处理完成继续,否则内部扫描将暂停
#ifdef SUPPORT_ADR_HW_LED   //通过LED的段码识别硬件地址时
  signed char LecDrv_cbPeriodFinal(void);
#else
  #define LecDrv_cbPeriodFinal()   (0)
#endif

#endif //#define __LED_DRV_H

