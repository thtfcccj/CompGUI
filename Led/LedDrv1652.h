/***************************************************************************
                       数码管显示驱动程序-在使用1652时的实现
此模块负责扫描驱动数码管的显示
此模块独立于硬件
缓冲区接口统一定义为：1亮,0灭 
***************************************************************************/

#ifndef __LED_DRV_1652_H
#define __LED_DRV_1652_H

/***************************************************************************
                              相关配置
***************************************************************************/
//关于Usart配置
//固定为19200bps 8个数据位，奇校验（1个数为寄数时校验位为0），1停止位

//定义LED个数, 5或6
#ifndef LED_DRV_LED_COUNT
  #define LED_DRV_LED_COUNT      5 
#endif

//使用标准USART(仅发送)，否则使用回调驱动
//#define SUPPORT_LED_DRV_1652_USART   

/***************************************************************************
                              相关结构
***************************************************************************/
struct _LedDrv1652{
  unsigned char Buf[LED_DRV_LED_COUNT];  //显示缓冲区,与硬件排列用查找表实现映射
  unsigned char CommBuf[LED_DRV_LED_COUNT + 1];//通讯发送缓冲区
  unsigned char Timer;                   //定时器
  unsigned char UpdateMask;             //需更新位的掩码
};

extern struct _LedDrv1652  LedDrv1652;

/***************************************************************************
                              相关函数
***************************************************************************/

//-----------------------------初始化函数-----------------------------
void LedDrv1652_Init(void);

//-------------------------------任务函数-----------------------------
//1ms调用一次
void LedDrv1652_Task(void);

/***************************************************************************
                    资源需求回调函数或所需定义声明
***************************************************************************/

//---------------------由用户层位置到硬件---------------------------
#include "IOCtrl.h"
//位置查找表定义:
#ifndef LED1652_TO_HW_LUT
  #define   LED1652_TO_HW_LUT  {0,1,2,3,4}
#endif
//配置位,b4:7:位驱动占空比b3:1段电流占空比，b0:8段5位(0默认)或7段6位(1)
#ifndef LED1652_CFG
 #define   LED1652_CFG  0xfe
#endif

//保留位掩码定义,无时不定义
//保留位用于驱动继电器等，在测试时不置位（位于LED_DRV_LED_COUNT - 1位）
//#define LED1652_RSV_POS      4
//#define LED1652_RSV_MASK     0xff

//定义需快速更新的位，如指示灯,无时不定义
//#define LED1652_FAST_BIT     4


/***************************************************************************
                           回调函数
***************************************************************************/

//-----------------------------硬件初始化------------------------------------
#ifndef SUPPORT_LED_DRV_1652_USART //内建USART时
  void LedDrv1652_cbHwInit(void);
#else //通用USART
  #define LedDrv1652_cbHwInit() do{}while(0)//独立初始化
#endif
//----------------------------发送数据---------------------------------------
//LedDrv1652.CommBuf存放要发送的数据
#ifndef SUPPORT_LED_DRV_1652_USART //内建USART时
  void LedDrv1652_cbSendStart(unsigned char SendSize);
#else //通用USART， 内部已实现，但需下述接口:
  #include "UsartDev.h"
  struct _UsartDev *LedDrv1652_cbpGetUsartDev(void);  
#endif

//--------------------------是否在测试状态-----------------------------
//测试状态指示灯全亮,直接实现：
#include "Test.h"
#define LedDrv1652_cbIsTest()    Test_IsDoing()

#endif //#define __LED_DRV_1652_H

